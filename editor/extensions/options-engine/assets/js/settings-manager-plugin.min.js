/**
 * @plugin.js
 * @App Settings Manager Plugin JS
 *
 * @License: http://www.siteeditor.org/license
 * @Contributing: http://www.siteeditor.org/contributing
 */

/*global siteEditor:true */
(function( exports, $ ){
    var api = sedApp.editor;

    api.AppSettings = api.Class.extend({

        initialize: function( options ){

            $.extend( this, options || {} );

            this.dialogSelector = "#sed-dialog-settings";

            this.settingsType = "app";

            this.templateType = "ajax";
            
            this.ready();
        },


        ready : function(){
            var self = this;

            //when render open settings dialog
            api.previewer.bind( 'openAppSettings' , function( data ) {
                self.openInitDialogSettings( data.settingId , data.forceOpen , data.reset );
            });

            this.view();

        },

        view : function(){ 
            var self = this;


            api.addFilter( 'sedAjaxLoadOptionsDataFilter' , function( data ){
                if( data.options_group == "sed_pages_layouts" ){
                    data.current_layout_group = api.currentLayoutGroup;
                    data.page_layout = api.fn.getPageLayout();//api( api.currentPageLayoutSettingId )();
                }
                return data;
            });


            api.addFilter( 'sedAjaxLoadOptionsDataFilter' , function( data ){
                if( data.options_group == "sed_page_options" || data.options_group.indexOf( "sed_post_options_" ) === 0 ){
                    data.page_id = api.settings.page.id;
                    data.page_type = api.settings.page.type;
                    data.post_type = api.settings.currentPostType || "";
                }
                return data;
            });

            api.addFilter( 'sedAppSettingsIdFilter' , function( optionsGroup ){

                if( optionsGroup == "sed_page_options" || optionsGroup == "sed_content_options" ){
                    optionsGroup += "_" + api.settings.page.id;
                }

                return optionsGroup;
            });

            //for all settings category like app & module settings
            $( self.selector ).find(".sed-app-settings-normal").livequery(function(){
                $(this).fadeIn( "slow" );
            });

            $(".sed_ajax_load_options_btn").livequery(function(){
                $(this).click(function(){
                    var $this = $(this),
                        settingId = $(this).data("settingId");
                    self.openInitDialogSettings( settingId , true , true );
                });
            }, function() {
                // unbind the change event
                $(this).unbind('click');
            });

            $(".sed-current-post-settings-btn").livequery(function() {

                $(this).data("settingsId", "sed_post_options_" + api.settings.page.id);

            });

            $(".sed-role-module-settings-btn").livequery(function() {

                var role            = $(this).data("role"),
                    selectorT       = '[sed_role="' + role + '"]',
                    moduleElement   = $("#website")[0].contentWindow.jQuery( selectorT );

                if( moduleElement.length > 0 ) { 

                    $(this).data( "modelId" , moduleElement.attr("sed_model_id") );

                }

            });

            /**
             * Update Color Settings
             */
            api.Events.bind( "after_app_settings_update" , function( settingsId ){

                _.each( api.sedGroupControls[settingsId] , function( data ){

                    if( !_.isUndefined( data.type ) && ( data.type == "color" || data.type == "multi-color" ) ) {

                        var id = data.control_id,
                            control = api.control.instance(id);
                        //console.log("-------------data--------", data);

                        control.update(control.setting());

                    }

                });

            });

            /*var __tabScope = function( element ){
                var type = element.prev().val();

                /*element.siblings().removeClass("active");
                element.addClass("active");*//*

                element.parents(".row_settings:first").siblings().hide();

                var currScope = element.parents(".dialog-level-box-settings-container:first").find(".sed-option-scope." + type );

                currScope.each(function(){

                    var $el = $(this).parents(".row_settings:first");

                    if( ! $el.hasClass( "sed-hide-dependency" ) )
                        $el.fadeIn( "slow" );

                });

            };

            //".buttonset-label"
            $( self.selector ).find("input.sed_page_options_scope").livequery(function(){

                if( $(this).prop("checked") ){
                    __tabScope( $(this).next() );
                    $(this).parents(".dialog-level-box-settings-container:first").fadeIn( "slow" );
                }

                $(this).next().on( "click.pageOptionsScope" , function(){
                    __tabScope( $(this) );
                });

            }, function() {
                // unbind the change event
                $(this).next().unbind('click.pageOptionsScope');
            });*/

            //update sed page options group after refresh page & open dialog settings
            /*api.Events.bind( "after_app_settings_update" , function( settingsId ){

                var currentPageSettingsId = "sed_page_options" + "_" + api.settings.page.id;

                if( currentPageSettingsId == settingsId ){
                    _.each( api.sedGroupControls[settingsId] , function( data ){

                        self.updateControl( data );

                    });
                }

            });

            api.Events.bind( "afterAppendSettingsTmpl" , function( $currentElDialog , settingsType , settingsId ){

                var currentPageSettingsId = "sed_page_options" + "_" + api.settings.page.id; 

                if( currentPageSettingsId == settingsId ){
                    _.each( api.sedGroupControls[settingsId] , function( data ){

                        self.updateControl( data );

                    });
                }

            });

        },

        updateControl : function( data ){

            var id = data.control_id ,
                control = api.control.instance( id );

            if( control.isStyleControl ){

                var sValue = api.appStyleEditorSettings.getCurrentValue( control.id , data , control.cssSelector );
                if( !_.isNull( sValue ) ){
                    var cValue = _.clone( sValue );
                    control.update( cValue );
                }else{
                    control.update( );
                }

            }else { //alert( control.setting() );control.defaultValue
                control.update( control.setting() );
            }*/

        },

        // , needToUpdateSettings
        openInitDialogSettings : function( optionsGroup , forceOpen , reset ){ //alert("test...");

            api.previewer.send('current_element' , ''  );

            var settingId = api.applyFilters( "sedAppSettingsIdFilter" , optionsGroup );

            api.sedDialogSettings.openInitDialogSettings( settingId , forceOpen , reset , this.settingsType , this.templateType , optionsGroup );

            api.Events.trigger( 'afterOpenInitDialogAppSettings' , optionsGroup , settingId );

        },

    });


   $( function() {

        api.appSettings = new api.AppSettings({});

   });
})( sedApp, jQuery );