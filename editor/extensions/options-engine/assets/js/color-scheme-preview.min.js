(function( exports, $ ){
    
    var api = sedApp.editor;

    $( function() { 

        api.colorSchemeSettings = window._sedColorSchemeSettings;

        /**
         * Preview For Color Scheme Settings
         *
         * @private
         */
        var _changeSiteColorScheme = function(){

            var _varsTpl = {};

            $.each( api.colorSchemeSettings.customize , function( _key , _settingId ){
                _varsTpl[_key] = api( _settingId )();
            });

            var template = api.template("tmpl-sed-color-scheme"),
                html = template( _varsTpl );

            $("#sed_color_scheme_css_code").html( html );

        };

        var _changeSiteColorSchemeBySkin = function( skin ){

            if( skin == "default" || _.isUndefined( api.colorSchemeSettings.skin[skin] ) ){
                //$("#sed_color_scheme_css_code").html( "" );
                /**
                 * Optimize sulotion for remove css codes
                 */
                $("#sed_color_scheme_css_code").replaceWith( '<style type="text/css" id="sed_color_scheme_css_code"></style>' );
            }else{

                var _varsTpl = {};

                $i = 0;
                $.each( api.colorSchemeSettings.customize , function( _key , _settingId ){
                    _varsTpl[_key] = api.colorSchemeSettings.skin[skin][$i];
                    $i++;
                });

                var template = api.template("tmpl-sed-color-scheme"),
                    html = template( _varsTpl );

                $("#sed_color_scheme_css_code").html( html );

            }

        };

        api( 'sed_color_scheme_type', function( value ) {
            value.bind( function( to ) {

                if( to == "customize" ){

                    _changeSiteColorScheme();

                }else{

                    _changeSiteColorSchemeBySkin( api( 'sed_color_scheme_skin' )() );

                }

            });
        });

        api( 'sed_color_scheme_skin', function( value ) {
            value.bind( function( to ) { 

                if( api( 'sed_color_scheme_type' )() == "skin" ){

                    _changeSiteColorSchemeBySkin( to );

                }

            });
        });

        $.each( api.colorSchemeSettings.customize , function( key , settingId ){

            api( settingId , function( value ) {

                value.bind( function( to ) {

                    var _varsTpl = {};

                    $.each( api.colorSchemeSettings.customize , function( _key , _settingId ){
                        _varsTpl[_key] = api( _settingId )();
                    });

                    var template = api.template("tmpl-sed-color-scheme"),
                        html = template( _varsTpl );

                    $("#sed_color_scheme_css_code").html( html );

                });

            });

        });
        
    });


})( sedApp, jQuery );