/**
 * plugin.js
 *
 *
 * License: http://www.siteeditor.org/license
 * Contributing: http://www.siteeditor.org/contributing
 */

/*global siteEditor:true */
(function( exports, $ ){

    var api = sedApp.editor;

    var iconsLibraryInit = false ;
    //var $container = $("#sed-dialog-media-library");
    //$container.innerHeight();
    $( function() {

        var selctedType , shortcodeName , eventKey , iconsSelected = [];

        api.Events.bind("sedDialogIconLibrary" , function(data){

              selctedType = data[0].selctedType;
              shortcodeName = data[0].shortcodeName;
              eventKey = data[0].eventKey;
              var currentIcons = data[0].currentIcons;

              iconsSelected = ( !_.isEmpty( currentIcons ) && _.isString( currentIcons ) ) ? currentIcons.split(",") : [];
              $('#site-editor-icon-library li').removeClass("sed-icon-item-selected");
              _.each( iconsSelected , function( filter ){
                  $("#site-editor-icon-library > .sed-font-icon-box li").each(function(){
                      var key = $(this).data("icon");
                      if ( key == filter ) {
                          $(this).addClass("sed-icon-item-selected");
                          return false;
                      }
                  });
              });

              if(iconsLibraryInit === true){
                return ;
              }

              $("#site-editor-icon-library").accordion({
                  header: "> div.sed-font-icon-box > h4" ,
                  active: 0,
                  collapsible: true,
                  event: 'click',
                  heightStyle: 'content',
              });

              var __itemSelect = function (element){
                  var self = this , icon = $( element ).data("icon") ,
                  index = $.inArray( icon , iconsSelected);

                  if(selctedType == "multi"){
                      $( element ).toggleClass( "sed-icon-item-selected" );

                      if( index > -1){
                          iconsSelected.splice(index, 1);
                      }else{
                          iconsSelected.push( icon );
                      }
                  }else{   
                      $(".sed-icon-item" , "#site-editor-icon-library").removeClass( "sed-icon-item-selected" );
                      $( element ).addClass( "sed-icon-item-selected" );
                      iconsSelected = [];
                      iconsSelected.push( icon );
                  }
              };

              $( "#sed-dialog-icon-library" ).dialog( "option", "buttons", [
                  {
                      text: api.I18n.insert_icon,
                      click: function() {
                          if( iconsSelected.length > 0){
                              $( this ).dialog( "close" );

                              if(selctedType == "multi"){
                                  if( !_.isEmpty( shortcodeName ) ){
                                      api.previewer.send( 'organize_icons', {
                                          className         : iconsSelected  ,
                                          shortcodeName     : shortcodeName
                                      });
                                      api.Events.trigger( 'organize_icons' , {
                                          className         : iconsSelected   ,
                                          shortcodeName     : shortcodeName
                                      });
                                  }else if( !_.isEmpty( eventKey ) ){
                                      api.Events.trigger( eventKey , iconsSelected );
                                  }
                              }else{
                                  if( !_.isEmpty( shortcodeName ) ){
                                      api.previewer.send( 'change_icon', {
                                          className         : iconsSelected[0]  ,
                                          shortcodeName     : shortcodeName
                                      });
                                      api.Events.trigger( 'change_icon' , {
                                          className         : iconsSelected[0]   ,
                                          shortcodeName     : shortcodeName
                                      });
                                  }else if( !_.isEmpty( eventKey ) ){
                                      api.Events.trigger( eventKey , iconsSelected[0] );
                                  }
                              }
                          }
                      }
                  },
                  {
                      text:  api.I18n.cancel,
                      click: function () {
                        $(this).dialog("close");
                      }
                  }
              ] );

              $('#site-editor-icon-library li').livequery(function(){
                  $(this).on("click" , function(e){
                      e.preventDefault();
                      __itemSelect(this);
                  });
              });

              loadla = false;
              $("#sed-icon-library-container").mCustomScrollbar({
                  //autoHideScrollbar:true ,
                  advanced:{
                      updateOnBrowserResize:true, /*update scrollbars on browser resize (for layouts based on percentages): boolean*/
                      updateOnContentResize:true,
                  },
                  callbacks:{
                      onScroll:function(){
                           /*if(loadla === false){
                              //$('.img-library').trigger('bttrlazyloading.load');
                              loadla = true;
                           }
                           if(this.mcs.topPct > 96){
                               sedMediaLibrary.setStartItem();
                              sedMediaLibrary.mediaLibraryLoad();
                          }  */ 
                      }
                  }
              });




              $("#sed-icon-lib-uploader").seduploader({
                  url : SED_UPLOAD_AJAX_URL,
                  unique_names : true,
                  dragdrop : true ,
                  multi_selection : true,
                  list_items : true,
                  filters : {
                      max_file_size : api.mediaSettings.params.max_upload_size + 'mb',
                      mime_types: [{title : api.I18n.font_archive , extensions : "zip"}]
                  },
                  prefixItemId : 'icon-item-'
              });


              $("#sed-icon-lib-uploader").on("UploadFile",function(e , up, files){
                  $("#sed_icon_library_panel_tab").tab('show');

              });

              $("#sed-icon-lib-uploader").on("Error", function(up, err) {
                  $("#sed_icon_library_panel_tab").tab('show');

              });

              $("#sed-icon-lib-uploader").on("AfterfileQueued",function(e , file){
                  var $item = $("#icon-item-" + file.id).html();
                  //$("#media-item-" + file.id).html( ' ' ); "<li>" + $item + "</li>"
                  //$('#site-editor-media-library').prepend( $("#media-item-" + file.id) );
              });

              $("#sed-icon-lib-uploader").on( "UploadProgress" ,function(e , up, file){

                  var item = $( '#icon-item-' + file.id) ,
                      w_item = $("#sed-icon-lib-uploader-items").width();
                  $('.progressbar', item).progressbar({
                    value: (10 * file.loaded) / file.size
                  });

            	  $('.progressbar', item).width( ( 813 * file.loaded) / file.size );
            	  $('.percent', item).html( file.percent + '%' );

              });


              $("#sed-icon-lib-uploader").on("FileUploaded",function(e , up, file, serverData){
                  serverData = $.parseJSON(serverData);
                  if(serverData.success === true){
                      __addZippedFont( serverData.data );
                  }
              });

              var __addZippedFont = function( filedata ){
                  // send request to server to extract the zip file, re arrange the content and save a config file
                  $.ajax({
                      type: "POST",
                      url: SEDAJAX.url,
                      data:
                      {
                          action        : 'add_zipped_font',
                          filedata      : filedata,
                          nonce         :  api.settings.nonce.iconLibrary.load ,
                          sed_page_ajax :  'icon_font_loader'
                      },
                      beforeSend: function()
                      {
                          $('.icon-library-loading' , '#site-editor-icon-library').show();
                      },
                      /*error: function()
                      {
                      alert('Couldn\'t add the font because the server didnï¿½t respond.<br/>Please reload the page, then try again');
                      },*/
                      success: function(response)
                      {
                          $('.icon-library-loading' , '#site-editor-icon-library').hide();
                          // Check if the user is logged out.
                          if ( '0' == response ) {
                              api.previewer.preview.iframe.hide();
                              api.previewer.login().done( function() {
                                  api.previewer.save();
                                  api.previewer.preview.iframe.show();
                              } );
                              return;
                          }

                          // Check for cheaters.
                          if ( '-1' == response ) {
                              api.previewer.cheatin();
                              return;
                          }

                          if ( '-2' == response ) {
                              $(".error-icon-items-lib").show();
                              $(".error-icon-items-lib span").html( api.I18n.invalid_data);
                              return;
                          }

                          $(".error-icon-items-lib").hide();

                          response = $.parseJSON( response );
                          if( response.success === true){

                              var styles = response.data.styles;

                              $.each(styles ,function( sindex , style){
                                  $('<link rel="stylesheet" type="text/css" href="' + style + '">').appendTo( $("head") );
                                  api.previewer.send( 'load_icons_font', style);
                              });

                              $("#site-editor-icon-library").accordion("destroy");
                              $("#site-editor-icon-library").html( response.data.output );
                              $("#site-editor-icon-library").accordion({
                                  header: "> div.sed-font-icon-box > h4" ,
                                  active: 0,
                                  collapsible: true,
                                  event: 'click',
                                  heightStyle: 'content',
                              });

                              $(".success-font-icon-load").slideDown( 300 ).delay( 5000 ).fadeOut( 400 );

                          }else{
                              var htm = $(".error-font-icon-load").html();
                              htm = htm.replace("{{response}}",response.data.output);
                              $(".error-font-icon-load").html( htm );
                              $(".error-font-icon-load").slideDown( 300 ).delay( 5000 ).fadeOut( 400 );

                          }

                      }
                  });
              };

              $(".remove-font-icon").livequery(function(){
                  $(this).on("click", function(e){
                      e.stopPropagation();
                      __removeIconsFont(this);
                  });
              });

     /*         $(".arrow-font-icon").livequery(function(){
                  $(this).click(function(e){
                      $(this).parent().next().toggle("slow");

                      if($(this).hasClass("default-angle-down")){
                          $(this).addClass("default-angle-right");
                          $(this).removeClass("default-angle-down");
                      }else{
                          $(this).addClass("default-angle-down");
                          $(this).removeClass("default-angle-right");
                      }
                  });
              });  */

              var __removeIconsFont = function(element){
                  // send request to server to remove the folder and the database entry
                  $.ajax({
                      type: "POST",
                      url: SEDAJAX.url,
                      data:
                      {
                          action        : 'remove_icons_font',
                          font_name     : $(element).data("fontName"),
                          nonce         : api.settings.nonce.iconLibrary.remove ,
                          sed_page_ajax : 'icon_font_remove'
                      },
                      beforeSend: function()
                      {
                          $('.icon-library-loading' , '#site-editor-icon-library').show();
                      },
                      error: function()
                      {
                          $('.icon-library-loading' , '#site-editor-icon-library').hide();
                          $(".error-font-icon-remove").show();
                          $(".error-font-icon-remove").html( api.I18n.ajax_remove_font_error);
                      },
                      success: function(response)
                      {
                          $('.icon-library-loading' , '#site-editor-icon-library').hide();
                          // Check if the user is logged out.
                          if ( '0' == response ) {
                              api.previewer.preview.iframe.hide();
                              api.previewer.login().done( function() {
                                  api.previewer.save();
                                  api.previewer.preview.iframe.show();
                              } );
                              return;
                          }

                          // Check for cheaters.
                          if ( '-1' == response ) {
                              api.previewer.cheatin();
                              return;
                          }

                          if ( '-2' == response ) {
                              $(".error-icon-items-lib").show();
                              $(".error-icon-items-lib span").html( api.I18n.invalid_data);
                              return;
                          }

                          $(".error-icon-items-lib").hide();

                          response = $.parseJSON( response );
                          if( response.success === true){

                              $(element).parents(".sed-font-icon-box:first").remove();
                              $(".success-font-icon-remove").html( api.I18n.remove_font_success );
                              $(".success-font-icon-remove").slideDown( 300 ).delay( 5000 ).fadeOut( 400 );
                          }else{
                             $(".error-font-icon-remove").html( api.I18n.remove_font_error +  response.data.output);
                             $(".error-font-icon-remove").slideDown( 300 ).delay( 5000 ).fadeOut( 400 );
                          }

                      }
                  });
              };

              $("#sed-icon-lib-uploader").on("UploadComplete",function(e , up, files){
                  //sedMediaLibrary.uploadProcessing = false;
              });

              setTimeout(function() {
                  $("#sed-icon-search").focus();
              }, 1000);


              $('#icon-library-tab a[data-toggle="tab"]').on('shown.bs.tab', function (e) {

                  if( $(this).attr("sed_model_id") == "sed_icon_library_upload_tab" ){
                      $( "#sed-dialog-icon-library" ).siblings(".ui-dialog-buttonpane").find('[role="button"]').hide();
                  }else{
                      $( "#sed-dialog-icon-library" ).siblings(".ui-dialog-buttonpane").find('[role="button"]').show();
                  }

              });

              $("#sed-icon-search").keyup(function(){

                  // Retrieve the input field text and reset the count to zero
                  var filter = $(this).val(), count = 0;
                  // Loop through the icon list
                  $("#site-editor-icon-library > .sed-font-icon-box li").each(function(){

                      // If the list item does not contain the text phrase fade it out
                      //
                      key = $(this).attr("data-icon-tag");
                      if ( key.search( new RegExp(filter, "i") ) < 0) {
                          $(this).fadeOut();
                      } else {
                          $(this).show();
                          count++;
                      }
                  });
              });

              iconsLibraryInit = true;

        });

   });

})( sedApp, jQuery );